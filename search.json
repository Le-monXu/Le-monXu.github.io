[{"title":"Python Selenium自动化测试笔记","url":"/2022/12/16/Python%20Selenium%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/","content":"Python Selenium自动化测试笔记，主要步骤流程：使用浏览器扩展插件Selenium IDE录制自动化流程，导出Python测试代码，编辑完善，完成自动化测试。\n主要步骤Selenium IDE插件录制自动化流程\n打开浏览器\n点击Selenium IDE插件\n输入项目名称，开始录制\n录制时尽量包括各种选项、意外\n录制结束，打开Selenium IDE插件点击停止录制\n调整每一条记录，最好使用XPATH记录\n选择Python导出，可选是否要注释\n\nPython Selenium自动化流程编写\n打开导出的Python代码\n修改类名、方法名，增加测试入口代码，先执行setup_method方法，再执行业务代码，最后要执行teardown_method方法\n修改测试所用浏览器，Selenium IDE导出代码默认使用Chrome\n增加import代码，用于异常判断\n\nimport selenium.common.exceptions\n\n\n判断元素是否存在：使用XPATH查找，通过异常判断，元素无法交互、元素找不到均返回False\n\ndef is_element_exist(self,elementXpath):\n        try:\n            self.driver.find_element(By.XPATH, elementXpath)\n            return True\n        except selenium.common.exceptions.NoSuchElementException:\n            return False\n        except selenium.common.exceptions.ElementNotInteractableException:\n            logger.info(&#39;ElementNotInteractableException&#39;)\n            return False\n\n\n等待元素出现：基于判断元素是否存在修改，使用循环等待，可以加入超时错误\n\ndef wait_to_show(self,elementXpath):\n        while True:\n            if self.is_element_exist(elementXpath):\n                break\n            else:\n                time.sleep(0.3)\n                continue\n\n\n等待元素出现后点击：15秒未出现抛出TimeoutError\n\ndef wait_to_continue(self,elementXpath):\n        tmp=0\n        while True:\n            if self.is_element_exist(elementXpath):\n                # time.sleep(0.5)\n                self.driver.find_element(By.XPATH, elementXpath).click()\n                break\n            elif tmp==50:\n                logger.error(elementXpath+&#39;---Timeout, raise TimeoutError&#39;)\n                raise TimeoutError(elementXpath+&#39;---Timeout, 元素实在是找不到了T_T&#39;)\n                break\n            else:\n                time.sleep(0.3)\n                tmp=tmp+1\n                continue\n\n\n错误处理：除了常规log输出错误，还可以使用Selenium保存错误截图，方便分析错误原因\n\nself.driver.get_screenshot_as_file(&quot;./img/&quot;+errorpath+&quot;错误.png&quot;)\n\n","categories":["自动化"],"tags":["Python","Selenium","自动化"]},{"title":"Hello World","url":"/2022/10/18/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"}]